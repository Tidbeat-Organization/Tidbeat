@model Tidbeat.Models.Post
@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer Localizer;
@{
    ViewData["Title"] = "Create";
}

<div>
    @{
        await Html.RenderPartialAsync("_Sidebar");
    }
</div>

<h3 style="color: #6610F2; margin-top: 100px;">@Localizer["create_post"]</h3>
<hr />

<div class="container d-flex justify-content-center" style="margin-top: 35px;">
    <div class="d-flex flex-column align-items-center">
        <div class="input-group d-flex flex-row justify-content-center justify-content-md-start mb-3" style="background-color: white; color: black;">
            <div class="align-self-start d-flex flex-row" style="color: #6610F2; font-weight: bold;">@Localizer["extra_options"]</div>
                    <select class="form-control w-100 border-primary rounded" id="formOptional" name="formOpp">
                <!option selected value="none">@Localizer["none"]</!option>
                <!option value="complete" @(ViewBag.chooseSong != null ? "selected" : "")>@Localizer["song"]</!option>
                <!option value="incomplete" @(ViewBag.chooseBand != null ? "selected" : "")>@Localizer["band"]</!option>
                        </select>
        </div>
        <form asp-action="Create" id="create-post-form">
            <div asp-validation-summary="ModelOnly" class="text-danger">
                @if (TempData.ContainsKey("error"))
                {
                    @TempData["error"]}
            </div>

            <!-- Song -->
            <div class="form-group row" id="CheckerFormMusic">
                <label asp-for="Song" class=" col-form-label text-md-start" style="color: #6610F2; font-weight: bold;">@Localizer["song"]:</label>
                <div class="w-100 d-flex" id="formfromsong">
                    <input autocomplete="off" role="combobox" list="" value="@((ViewBag?.chooseSong?.Name ?? ""))" name="SongId1" id="SongIdInput" oninput='onInputSong()' class="form-control" placeholder="@Localizer["pick_song"]..." style="border: 1.5px solid #6610F2; border-radius: 15px;" @(ViewBag.chooseSong != null ? "value=" + @ViewBag.chooseSong.Name : "")
                    @(ViewBag.chooseBand != null ? "disabled" : "") />
                    <datalist id="SongOptions" role="listbox">
                        @if (ViewBag.songs != null)
                        {
                            @foreach (var item in ViewBag.songs)
                            {
                                <option data-value="@item.Id" song-link="@item.Href" name-value="@item.Name" band-value="@item.Artists[0].Name">@item.Name by @item.Artists[0].Name</option>
                            }

                        }
                    </datalist>

                    <input type="hidden" name="SongId" id="answerInputSong" value="@(ViewBag.chooseSong?.Id ?? "")">
                    <div id="SongCross" type="hidden" class="bi bi-x fs-3 py-0 text-primary align-self-center hover-background-grey" data-toggle="tooltip" data-placement="top" title="@Localizer["delete"]" onclick="cleanSong()"></div>
                </div>
                 <span asp-validation-for="Song" class="text-danger"></span>
            </div>

            <!-- Band -->
             <div class="form-group row" style="margin-top: 15px;" id="CheckerFormBand">
                <label asp-for="Band" class="col-form-label text-md-start" style="color: #6610F2; font-weight: bold;">@Localizer["band"]:</label>
                <div class="w-100 d-flex" id="formfromband">
                    <input autocomplete="off" role="combobox" list="" value="@((ViewBag?.chooseBand?.Name ?? ViewBag?.chooseSong?.Artists[0]?.Name ?? ""))" name="BandId1" id="Bandsinput" oninput='onInputBand()' class="form-control" placeholder="@Localizer["pick_band"]..." style="border: 1.5px solid #6610F2; border-radius: 15px;"
                    @(ViewBag.chooseSong != null ? "disabled" : "") />

                    <datalist id="BandOptions" role="listbox" class="zindex-dropdown" style="position: absolute; z-index: 999">
                        @foreach (var item in ViewBag.bands)
                        {
                            <option data-value="@item.Id">@item.Name</option>
                        }
                    </datalist>
                    <input type="hidden" name="BandId" id="answerInputband" value="@(ViewBag.chooseBand?.Id ?? "")">
                    <div id="BandCross" type="hidden" class="bi bi-x fs-3 py-0 text-primary hover-background-grey align-self-center" data-toggle="tooltip" data-placement="top" title="@Localizer["delete"]" onclick="cleanBand()"></div>
                </div>
                <span asp-validation-for="Band" class="text-danger"></span>
            </div>

            <!-- Spotify Link -->
            <div class="form-group row w-100" style="margin-top: 15px;" id="CheckFormLink">
                <label class="col-form-label w-100 text-start">
                    <span style="color: #6610F2; font-weight: bold;">Link:&nbsp;</span><a id="SongLink" target="_blank" href="@{
                            if (ViewBag.chooseSong != null) {
                                string url = $"https://open.spotify.com/track/{ViewBag.chooseSong.Id}";
                                                                                            @url
                            }
                            else if (ViewBag.chooseBand != null) {
                                string url = $"https://open.spotify.com/artist/{ViewBag.chooseBand.Id}";
                                                                                            @url
                            }
                        }">
                        @if (ViewBag.chooseSong != null)
                        {
                            <span>Spotify - @ViewBag.chooseSong.Artists[0].Name</span>
                        }
                        else if (ViewBag.chooseBand != null)
                        {
                            <span>Spotify - @ViewBag.chooseBand.Name</span>
                        }
                    </a>
                </label>
            </div>

            <!-- Title -->
            <div class="form-group row" style="margin-top: 20px;">
                <label asp-for="Title" class="col-form-label text-md-start" style="color: #6610F2; font-weight: bold;">@Localizer["title"]:</label>
                <div class="d-flex flex-column">
                    <input asp-for="Title" id="create-post-title" class="form-control" placeholder="@Localizer["type_title"]..." style="border: 1.5px solid #6610F2; border-radius: 15px;" />
                    <span asp-validation-for="Title" class="text-danger text-start" id="title-validation-span"></span>
                </div>
            </div>

            <!-- Content -->
            <div class="form-group" style="margin-top: 10px; display: flex; flex-direction: column;">
                <!-- <label asp-for="Content" class="control-label" style="color: #6610F2;"></label> -->
                <textarea asp-for="Content" id="postcreate" class="form-control" style="height: 200px; border: 1.5px solid #6610F2; border-radius: 15px;" placeholder="@Localizer["type_content"]..."></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <!-- Form submit -->
            <div class="align-buttons">
                <div class="form-group create-button" style="margin-top: 25px;">
                    <button type="button" id="submit-button-create-post" class="btn btn-primary ">@Localizer["create"]</button>
                    <a asp-action="Index" class="ms-2">@Localizer["cancel"]</a>
                </div>
            </div>  
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
<script>
        // Select the body element
        const body = document.querySelector('body');
        function onInputSong() {
            var val = document.getElementById("SongIdInput");
            var opts = document.getElementById('SongOptions').children;
            var hiddenInput = document.getElementById("answerInputSong");
            var songLink = document.getElementById("SongLink");
            var bandInput = document.getElementById("Bandsinput");
            var boolCheck = true;
            var oneSecond = true;
            //hiddenInput.value = val.value;
            hiddenInput.value = "";
            songLink.textContent="";
            for (var i = 0; i < opts.length; i++) {
                let actualChild = opts[i];
                let tempValue = actualChild.getAttribute('name-value');
                if (tempValue === val.value) {
                    // An item was selected from the list!
                    // yourCallbackHere()
                    hiddenInput.value = opts[i].getAttribute('data-value');
                    songLink.textContent = "Spotify - " + opts[i].getAttribute('name-value');
                    songLink.setAttribute("href", "https://open.spotify.com/track/"+opts[i].getAttribute('data-value'));
                    //bandInput.value =opts[i].getAttribute('band-value');
                    boolCheck = false;
                    break;
                }
            }
            if (boolCheck) {
                if(!oneSecond)
                {
                    setTimeout(function() {
                        
                      // code to execute after one second
                    }, 1000); // 1000 milliseconds = 1 second
                }
                // Set the cursor to "wait" before starting the long-running operation
                body.style.cursor = 'wait';
                oneSecond = false;
                fetch(window.location.origin + '/Posts/SongInfo/?searchKey=' + val.value)
                    .then(response => response.json())
                    .then(data => {
                        // Loop through the JSON array and do something with each item
                        let options = document.getElementById("SongOptions");
                        while(options.firstChild)
                        {
                            options.removeChild(options.firstChild);
                        }

                        data.forEach(item => {
                            var option = document.createElement("option");
                            option.innerText = item.name + " by " + item.artists[0].name;
                            option.setAttribute("data-value",item.id);
                            option.setAttribute("name-value",item.name);
                            option.setAttribute("song-link", item.Href);
                            option.setAttribute("band-value",item.artists[0].name);
                                option.onclick = function () {
                                     document.getElementById("SongIdInput").disabled=true;
                                    bandInput.disabled= true;
                                    val.value = option.getAttribute('name-value');
                                    options.style.display = 'none';
                                    hiddenInput.value = option.getAttribute('data-value');
                                    songLink.textContent = "Spotify - " + option.innerText;
                                    bandInput.value = option.getAttribute('band-value');
                                    songLink.setAttribute("href", "https://open.spotify.com/track/" + option.getAttribute('data-value'));   
                                   document.getElementById('SongOptions').style.display = 'none';
                                }
                            options.appendChild(option);
                            // Your code here
                            console.log(item.name);
                        });
                        body.style.cursor = 'auto';
                    })
                    oneSecond = false;
            }
        }
        
        function onInputBand() {
            var val = document.getElementById("Bandsinput");
            var opts = document.getElementById('BandOptions').childNodes;
            var hiddenInput = document.getElementById("answerInputband");
            var songInput = document.getElementById("SongIdInput");
            var songLink = document.getElementById("SongLink");
            var boolCheck = true;
            var oneSecond = true;
            //hiddenInput.value = val.value;
            hiddenInput.value = "";
            for (var i = 0; i < opts.length; i++) {
                if (opts[i].innerText === val.value) {
                    // An item was selected from the list!
                    // yourCallbackHere()
                    hiddenInput.value = opts[i].getAttribute('data-value');
                    songLink.textContent = "Spotify - " + opts[i].innerText;
                    songLink.setAttribute("href", "https://open.spotify.com/artist/" + opts[i].getAttribute('data-value'));
                    boolCheck = false;
                    break;
                }
            }
            if (boolCheck) {
                if (!oneSecond) {
                    setTimeout(function () {

                        // code to execute after one second
                    }, 1000); // 1000 milliseconds = 1 second
                }
                // Set the cursor to "wait" before starting the long-running operation
                body.style.cursor = 'wait';
                oneSecond = false;
                //RedirectToLink
                fetch(window.location.origin + '/Posts/BandsInfo?searchKey=' + val.value)
                .then(response => response.json())
                .then(data => {
                    // Loop through the JSON array and do something with each item
                    let options = document.getElementById("BandOptions");
                    while (options.firstChild) {
                        options.removeChild(options.firstChild);
                    }
                    data.forEach(item => {
                        var option = document.createElement("option");
                        option.text = item.name;
                        option.setAttribute("data-value", item.id);
                            option.onclick = function () {
                                document.getElementById("Bandsinput").disabled= true;
                                songInput.disabled = true;
                                val.value = option.value;
                                options.style.display = 'none';
                                hiddenInput.value = option.getAttribute('data-value');
                                songLink.textContent = "Spotify - " + option.innerText;
                                songLink.setAttribute("href", "https://open.spotify.com/artist/" + option.getAttribute('data-value'));
                                document.getElementById('BandOptions').style.display = 'none';
                            }
                        options.appendChild(option);
                        // Your code here
                        console.log(item.name);
                    });
                     body.style.cursor = 'auto';
                })
                var oneSecond = true;
            }
        }

        document.getElementById("formfromsong").addEventListener("focusout", (event) => {
            if (document.getElementById("answerInputSong").value === ""){
                document.getElementById("SongIdInput").value = "";
                document.getElementById("Bandsinput").value = "";
            }
        });
        document.getElementById("formfromband").addEventListener("focusout", (event) => {
            if (document.getElementById("answerInputband").value === "") {
                document.getElementById("Bandsinput").value = "";
            }
        });

        document.getElementById("SongIdInput").addEventListener("blur", () => {
            setTimeout(() => {
                optionS.style.display = "none";
            }, 100)
        });
        document.getElementById("Bandsinput").addEventListener("blur", () => {
            setTimeout(() => {
                optionS2.style.display = "none";
            }, 100)
        });
        

        const songLink = document.getElementById("SongLink");
        var input2 = document.getElementById("Bandsinput");
        var input = document.getElementById("SongIdInput");
        const hiddenInput = document.getElementById("answerInputSong");
        var optionS = document.getElementById('SongOptions');
        input.onfocus = function () {
            optionS.style.display = 'block';
        };
        for (let option of optionS.options) {
            option.onclick = function () {
            document.getElementById("SongIdInput").disabled=true;
                input2.disabled = true;
                input.value = option.value;
                optionS.style.display = 'none';
                hiddenInput.value = option.getAttribute('data-value');
                songLink.textContent = "Spotify - " + option.innerText;
                songLink.setAttribute("href", "https://open.spotify.com/track/" + option.getAttribute('data-value'));
                document.getElementById('SongOptions').style.display = 'none';
                input2.value = option.getAttribute('band-value');
            }
        };

        var optionS2 = document.getElementById('BandOptions');

        input2.onfocus = function () {
            optionS2.style.display = 'block';
        };
        const hiddenInput2 = document.getElementById("answerInputband");
        for (let option of optionS2.options) {
            option.onclick = function () {
                document.getElementById("Bandsinput").disabled= true;
                input.disabled = true;
                input2.value = option.value;
                optionS2.style.display = 'none';
                hiddenInput2.value = option.getAttribute('data-value');
                songLink.textContent = "Spotify - " + option.innerText;
                songLink.setAttribute("href", "https://open.spotify.com/artist/" + option.getAttribute('data-value'));
                document.getElementById('BandOptions').style.display = 'none';
            }
        };
        //For the Optional
        var optionalChecker = document.getElementById("formOptional");
        if (optionalChecker.value === "complete") {
            document.getElementById("CheckerFormMusic").style.display = 'flex';
            document.getElementById("CheckerFormBand").style.display = 'flex';
            document.getElementById("CheckFormLink").style.display = 'flex';
            document.getElementById("SongCross").style.display = 'flex';
            document.getElementById("BandCross").style.display = 'none';
            document.getElementById("Bandsinput").disabled= true;
            document.getElementById("SongIdInput").disabled=true;

        } else if (optionalChecker.value === "incomplete") {
            document.getElementById("Bandsinput").disabled= true;
            document.getElementById("SongIdInput").disabled=true;
            document.getElementById("CheckerFormMusic").style.display = 'none';
            document.getElementById("CheckerFormBand").style.display = 'flex';
            document.getElementById("CheckFormLink").style.display = 'flex';
            document.getElementById("SongCross").style.display = 'none';
            document.getElementById("BandCross").style.display = 'flex';
        }else
        {
            document.getElementById("CheckerFormMusic").style.display = 'none';
            document.getElementById("CheckerFormBand").style.display = 'none';
            document.getElementById("CheckFormLink").style.display = 'none';
            document.getElementById("SongCross").style.display = 'none';
            document.getElementById("BandCross").style.display = 'none';
        }
       optionalChecker.addEventListener("change", (event) => {
        if (optionalChecker.value === "complete") {document.getElementById("CheckerFormMusic").style.display = 'flex';
            document.getElementById("CheckerFormBand").style.display = 'flex';
            document.getElementById("CheckFormLink").style.display = 'flex';
            document.getElementById("SongCross").style.display = 'flex';
            document.getElementById("BandCross").style.display = 'none';
            document.getElementById("Bandsinput").disabled= true;
            document.getElementById("SongIdInput").disabled=false;
                clean()

        } else if (optionalChecker.value === "incomplete") {
            document.getElementById("Bandsinput").disabled= false;
            document.getElementById("SongIdInput").disabled=true;
            document.getElementById("CheckerFormMusic").style.display = 'none';
            document.getElementById("CheckerFormBand").style.display = 'flex';
                document.getElementById("CheckFormLink").style.display = 'flex';
                document.getElementById("SongCross").style.display = 'none';
            document.getElementById("BandCross").style.display = 'flex';
                clean()
        }else
        {
            document.getElementById("CheckerFormMusic").style.display = 'none';
            document.getElementById("CheckerFormBand").style.display = 'none';
            document.getElementById("CheckFormLink").style.display = 'none';
                document.getElementById("SongCross").style.display = 'none';
                document.getElementById("BandCross").style.display = 'none';
            clean()
        }
       });
       //cleanupFunction
       function clean()
       {
           document.getElementById("SongLink").textContent="";
            document.getElementById("answerInputband").value = "";
            document.getElementById("Bandsinput").value = "";
            document.getElementById("answerInputSong").value = "";
            document.getElementById('SongIdInput').value = "";
       }

       function cleanBand()
       {
            document.getElementById("Bandsinput").disabled = false;
           clean()
       }
       function cleanSong()
       {
           
            document.getElementById("SongIdInput").disabled=false;
           clean()
       }

       function validateTitle() {
        var title = document.getElementById("create-post-title").value;
        if (title.length === 0 || !title.trim()) {
            var warningMsg = "@Localizer["type_title"]";
            document.getElementById("title-validation-span").textContent = warningMsg;
            return false;
        }
        return true;
       }

        function validateDescription() {
            var descriptionContent = tinymce.get('postcreate').getContent();
            if (descriptionContent.length === 0 || !descriptionContent.trim()) {
                var warningMsg = "@Localizer["type_content"]";
                tinymce.get('postcreate').notificationManager.open({
                    text: warningMsg,
                    type: 'warning',
                });
                return false;
            }
            return true;
        }

        var submitButtonCreatePost = document.getElementById("submit-button-create-post");
        submitButtonCreatePost.onclick = function () {
            if (validateTitle() && validateDescription()) {
                document.getElementById("create-post-form").submit();
            }
        };

        //Adds a class to the auto-generated rich-text since I can't add it in the html.
        window.onload = function() {
            document.getElementsByClassName('tox-tinymce')[0].classList.add('tox-tinymce-w-md-700');
        }
        
</script>

<style>
        datalist {
            position: absolute;
            background-color: white;
            border-radius: 0 0 5px 5px;
            border-top: none;
            border-color: #6610F2;
            font-family: sans-serif;
            border: 1px solid #6610F2;
            width:625px;
            padding: 5px;
            max-height: 10rem;
            overflow-y: auto
        }

            datalist option {
                color: black;
                background-color: white;
                cursor: pointer;
            }

        option {
            color: black;
            background-color: white;
            cursor: pointer;
        }

        datalist option:hover, datalist option:focus {
            color: black;
            background-color: lightskyblue;
        }
</style>
