@model Tidbeat.Models.Post
@{
    ViewData["Title"] = "Create";
}
}

<h3 style="color: #6610F2; margin-top: 100px;">Criar Post</h3>
<hr />

<div class="container d-flex justify-content-center" style="margin-top: 35px;">
    <div class="col-md-6 col-lg-4" style="margin-right: 250px;">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <!-- Song -->
            <div class="form-group row">
                <label asp-for="Song" class="col-sm-2 col-form-label" style="color: #6610F2; font-weight: bold;">Música:</label>
                <div class="col-sm-10">
                    <input list="SongOptions" value="@((ViewBag?.chooseSong?.Name ?? ""))" name="SongId1" id="SongIdInput" oninput='onInputSong()' class="form-control" placeholder="Escolha a música..." style="border: 1.5px solid #6610F2; border-radius: 15px; width:625px;" @(ViewBag.chooseSong != null ? "value=" + @ViewBag.chooseSong.Name : "")
                    @(ViewBag.chooseBand != null ? "disabled" : "") />
                    <datalist id="SongOptions">
                        @if (ViewBag.songs != null)
                        {
                            @foreach (var item in ViewBag.songs)
                            {
                                <option data-value="@item.Uri" song-link="@item.Href">@item.Name</option>
                            }

                        }
                    </datalist>
                    <input type="hidden" name="SongId" id="answerInputSong" value="@if(ViewBag.chooseSong != null){@ViewBag.chooseSong.Uri}">
                    <span asp-validation-for="Song" class="text-danger"></span>
                </div>
            </div>

            <!-- Band -->
             <div class="form-group row" style="margin-top: 15px;">
                <label asp-for="Band" class="col-sm-2 col-form-label" style="color: #6610F2; font-weight: bold;">Banda:</label>
                <div class="col-sm-10">
                    <input list="BandOptions" value="@((ViewBag?.chooseBand?.Name ?? ""))" name="BandId1" id="Bandsinput" oninput='onInputBand()' class="form-control" placeholder="Escolha a banda..." style="border: 1.5px solid #6610F2; border-radius: 15px; width:625px;"
                    @(ViewBag.chooseSong != null ? "disabled" : "") />
                    <!--@*      @if (ViewBag.chooseSong != null || ViewBag.chooseBand != null)
                           {
                           value="@((ViewBag.chooseSong != null) ? ViewBag.chooseSong.Artists[0].Name : ViewBag.chooseBand.Name)"
                    *@}-->
                    <datalist id="BandOptions">
                        @foreach (var item in ViewBag.bands)
                        {
                            <option data-value="@item.Uri">@item.Name</option>
                        }
                    </datalist>
                    <input type="hidden" name="BandId" id="answerInputband" value="@if(ViewBag.chooseBand != null){@ViewBag.chooseBand.Uri}">
                    <span asp-validation-for="Band" class="text-danger"></span>
                </div>
            </div>

            <!-- Spotify Link -->
            <div class="form-group row" style="margin-top: 15px;">
                <label class="col-sm-2 col-form-label w-100 text-start">
                    <span style="color: #6610F2; font-weight: bold;">Link:</span><a id="SongLink" href="@{
                            if (ViewBag.chooseSong != null) {
                                string url = $"https://open.spotify.com/track/{ViewBag.chooseSong.Id}";
                                    @url
                            }
                            else if (ViewBag.chooseBand != null) {
                                string url = $"https://open.spotify.com/artist/{ViewBag.chooseBand.Id}";
                                    @url
                            }
                        }">
                        @if (ViewBag.chooseSong != null)
                        {
                            <span>Spotify - @ViewBag.chooseSong.Artists[0].Name</span>
                        }
                        else if (ViewBag.chooseBand != null)
                        {
                            <span>Spotify - @ViewBag.chooseBand.Name</span>
                        }
                    </a>
                </label>
            </div>

            <!-- Title -->
            <div class="form-group row" style="margin-top: 20px;">
                <label asp-for="Title" class="col-sm-2 col-form-label" style="color: #6610F2; font-weight: bold;">Título:</label>
                <div class="col-sm-10">
                    <input asp-for="Title" class="form-control" placeholder="Escreva o título do seu post..." style="border: 1.5px solid #6610F2; border-radius: 15px; width:625px;" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>

            <!-- Content -->
            <div class="form-group" style="margin-top: 10px; display: flex; flex-direction: column;">
                <!-- <label asp-for="Content" class="control-label" style="color: #6610F2;"></label> -->
                <textarea asp-for="Content" class="form-control" style="height: 200px; border: 1.5px solid #6610F2; border-radius: 15px; width: 700px;" placeholder="Escreva o conteúdo do seu post..."></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <!-- Form submit -->
            <div class="align-buttons" style="margin-left: 280px;">
                <div class="form-group create-button" style="margin-top: 25px;">
                    <input type="submit" value="Criar" class="btn btn-primary" />
                </div>
                <div class="row" style="margin-top: 20px;">
                    <div class="col">
                        <a asp-action="Index">Cancelar</a>
                    </div>
                </div>
            </div>  
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
<script>
        function onInputSong() {
            var val = document.getElementById("SongIdInput");
            var opts = document.getElementById('SongOptions').childNodes;
            var hiddenInput = document.getElementById("answerInputSong");
            var songLink = document.getElementById("SongLink");
            var bandInput = document.getElementById("Bandsinput");
            var boolCheck = true;
            //hiddenInput.value = val.value;
            hiddenInput.value = "";
            songLink.textContent="";
            if (val.value.length > 0) {
                bandInput.disabled= true;
            }else
            {
                bandInput.disabled = false;
            }
            for (var i = 0; i < opts.length; i++) {
                if (opts[i].innerText === val.value) {
                    // An item was selected from the list!
                    // yourCallbackHere()
                    hiddenInput.value = opts[i].getAttribute('data-value');
                    songLink.textContent = "Spotify - " + opts[i].innerText;
                    songLink.setAttribute("href", opts[i].getAttribute('song-link'));
                    boolCheck = false;
                    break;
                }
            }
            if (boolCheck) {
                fetch(window.location.origin + '/Posts/SongInfo/?searchKey=' + val.value)
                    .then(response => response.json())
                    .then(data => {
                        // Loop through the JSON array and do something with each item
                        let options = document.getElementById("SongOptions");
                        while(options.firstChild)
                        {
                            options.removeChild(options.firstChild);
                        }
                        data.forEach(item => {
                            var option = document.createElement("option");
                            option.text = item.name;
                            option.setAttribute("data-value",item.id);
                            option.setAttribute("song-link", item.Href);
                            options.appendChild(option);
                            // Your code here
                            console.log(item.name);
                        });
                    })
            }
        }
        
        function onInputBand() {
            var val = document.getElementById("Bandsinput");
            var opts = document.getElementById('BandOptions').childNodes;
            var hiddenInput = document.getElementById("answerInputband");
            var boolCheck = true;
            var songInput = document.getElementById("SongIdInput");
            if (val.value.length > 0) {
                songInput.disabled = true;
            } else {
               songInput.disabled = false;
            }
            //hiddenInput.value = val.value;
            hiddenInput.value = "";
            for (var i = 0; i < opts.length; i++) {
                if (opts[i].innerText === val.value) {
                    // An item was selected from the list!
                    // yourCallbackHere()
                    hiddenInput.value = opts[i].getAttribute('data-value');
                    boolCheck = false;
                    break;
                }
            }
            if (boolCheck) {
                //RedirectToLink
                fetch(window.location.origin + '/Posts/BandsInfo?searchKey=' + val.value)
                .then(response => response.json())
                .then(data => {
                    // Loop through the JSON array and do something with each item
                        let options = document.getElementById("BandOptions");
                    while (options.firstChild) {
                        options.removeChild(options.firstChild);
                    }
                    data.forEach(item => {
                        var option = document.createElement("option");
                        option.text = item.name;
                        option.setAttribute("data-value", item.id);
                        options.appendChild(option);
                        // Your code here
                        console.log(item.name);
                    });
                })
            }
        }

</script>