@model IEnumerable<Tidbeat.Models.Report>
@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Lista de denúncias";
    var name = ViewData["NameFilter"];
    var reason = ViewData["ReasonFilter"];
    var type= ViewData["TypeFilter"];
    var state=ViewData["StateFilter"];
    var sort=ViewData["SortFilter"];
    var offset = ViewData["offset"];
}

<style>
    .table-bordered {
        border: 1px solid #6610F2;
    }
</style>


<!-- SideBar -->
<div>
    @{
        await Html.RenderPartialAsync("_Sidebar");
    }
</div>

<h1 class="text-start ms-3" style="color: #6610F2; margin-top: 72px;">@Localizer["filters"]</h1>

<!-- Form -->
<form method="get" action="@Url.Action("Index", "Reports")">
    <div class="row">
        <div class="form-group col-md-4">
            <label for="name" class="row justify-content-left ms-1">@Localizer["user_name"]</label>
            <input type="text" class="form-control" id="name" name="name" placeholder="@Localizer["search"]" value="@ViewData["NameFilter"]">
        </div>
        <div class="form-group col-md-4">
            <label for="type" class="row justify-content-left ms-1">@Localizer["type"]</label>
            <select class="form-control" id="type" name="type">
                <option value="">@Localizer["all_types"]</option>
                <option value="user" selected="@((string)ViewData["TypeFilter"] == "user")">@Localizer["userf"]</option>
                <option value="post" selected="@((string)ViewData["TypeFilter"] == "post")">@Localizer["postf"]</option>
                <option value="comment" selected="@((string)ViewData["TypeFilter"] == "comment")">@Localizer["commentf"]</option>
            </select>
        </div>
        <div class="form-group col-md-4">
            <label for="reason" class="row justify-content-left ms-1">@Localizer["reason"]</label>
            <select class="form-control" id="reason" name="reason">
                <option value="">@Localizer["all_reasons"]</option>
                <option value="gore" selected="@((string)ViewData["ReasonFilter"] == "gore")">@Localizer["goref"]</option>
                <option value="hate" selected="@((string)ViewData["ReasonFilter"] == "hate")">@Localizer["hatef"]</option>
                <option value="other" selected="@((string)ViewData["ReasonFilter"] == "other")">@Localizer["otherf"]</option>
                <option value="sexual" selected="@((string)ViewData["ReasonFilter"] == "sexual")">@Localizer["sexualf"]</option>
                <option value="innappropriate" selected="@((string)ViewData["ReasonFilter"] == "innappropriate")">@Localizer["innappropriatef"]</option>
            </select>
        </div>
    </div>
    <div class="row mt-3">
        <div class="form-group col-md-4">
            <label for="state" class="row justify-content-left ms-1">@Localizer["state"]</label>
            <select class="form-control" id="state" name="state">
                <option value="">@Localizer["all_states"]</option>
                <option value="created" selected="@((string)ViewData["StateFilter"] == "created")">@Localizer["createdf"]</option>
                <option value="open" selected="@((string)ViewData["StateFilter"] == "open")">@Localizer["openf"]</option>
                <option value="close" selected="@((string)ViewData["StateFilter"] == "close")">@Localizer["closedf"]</option>
            </select>
        </div>
        <div class="form-group col-md-4">
            <label for="sort" class="row justify-content-left ms-1">@Localizer["sort"]</label>
            <select class="form-control" id="sort" name="sort">
                <option value="new" selected="@((string)ViewData["SortFilter"] == "new")">@Localizer["newf"]</option>
                <option value="old" selected="@((string)ViewData["SortFilter"] == "old")">@Localizer["oldf"]</option>
            </select>
        </div>
        <div class="form-group col-md-4 mt-3">
            <label></label>
            <button type="submit" class="btn btn-primary btn-block">
                <img src="/images/SearchIcon.png" alt="Procurar" height="37" width="45" />
            </button>
        </div>
    </div>
</form>

<div class="border border-1 border-light-grey my-4"></div>

<div class="d-flex justify-content-between align-items-center">
    <h2 class="text-start ms-3 my-4">@Localizer["reports"]</h2>
    <div>
        <div class="d-flex">
            <div class="fw-bold text-primary">@ViewBag.TotalBannedUsersCount</div>&nbsp;@Localizer["banned_users"]
        </div>
        <div class="d-flex">
            <div class="fw-bold text-primary">@ViewBag.TotalOpenReports</div>&nbsp;@Localizer["open_reports"]
        </div>
    </div>
</div>

<!-- Table -->
<div class="table-responsive">
<table class="table table-striped table-bordered">
    <thead class="thead-dark" style="background-color: #6610F2; color: white;">
        <tr>
            <th>@Localizer["reported_user"]</th>
            <th>@Localizer["report_type"]</th>
            <th>@Localizer["report_reason"]</th>
            <th>@Localizer["report_state"]</th>
            <th>@Localizer["report_date"]</th>
            <th>@Localizer["see"]</th>
        </tr>
    </thead>
        <tbody id="mainReportList">
       <!-- @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.UserReported.FullName)</td>
                <td>@Localizer[item.ReportItemType.ToString()]</td>
                <td>@Localizer[item.Reason.ToString()]</td>
                <td>@Localizer[item.Status.ToString()]</td>
                <td>@Html.DisplayFor(modelItem => item.Date)</td>
                <td><a class="btn btn-sm btn-primary" asp-action="Details" asp-route-id="@item.Id">@Localizer["details"]</a></td>
            </tr>
        }

        @if (!Model.Any())
        {
            <tr>
                <td colspan="7">@Localizer["not_found"]</td>
            </tr>
        }-->

            <partial name="_ReportListPartial" />
    </tbody>
</table>
</div>
<script>
    var loading = false;
    var offset = 0;
    $(function () {
        // Listen for scroll events on the window
        $(window).scroll(function () {
            // Check if we've reached the bottom of the page
            console.log("here")
            if (Math.ceil($(window).scrollTop()) == Math.round($(document).height() - $(window).height()) && !loading) {
                loading = true;
                console.log("here")
                // Load more data
                $.ajax({
                    url: "@Url.Action("getData")",
                    data: { offset: offset, name: "@name", reason: "@reason", type: "@type",state:"@state" , sort:"@sort" },
                    dataType: "html",
                    success: function (data) {
                        if (data.length > 0) {
                            // Append the data to the table
                            $("#mainReportList").append(data);
                            // Increment the offset for the next load
                            offset += 20;
                        }
                        loading = false;
                    },
                    error: function (xhr, status, error) {
                        loading = false;
                    }
                });
            }
        });
    });
</script>