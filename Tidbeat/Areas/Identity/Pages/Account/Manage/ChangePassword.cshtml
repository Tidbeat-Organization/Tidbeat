@page
@model ChangePasswordModel
@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer Localizer;
@{
    ViewData["Title"] = Localizer["manage_password"];
    ViewData["ActivePage"] = ManageNavPages.ChangePassword;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row justify-content-center">
    <div class="col-md-6 d-flex justify-content-center">
        <form id="change-password-form" method="post" class="w-100">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="text-danger mt-3" id="Danger">
                @if (ModelState.ContainsKey("Danger"))
                {
                    @ViewData.ModelState["Danger"].Errors.FirstOrDefault().ErrorMessage.ToString()
                    ;
                }
            </div>
            <div class="mt-3">
                <label asp-for="Input.OldPassword" class="form-label text-primary"></label>
                <input asp-for="Input.OldPassword" class="form-control rounded border border-primary" autocomplete="current-password" aria-required="true" value=@if (TempData.ContainsKey("OldPassword"))
               {
                       @TempData["OldPassword"]
;
               }/>
                <span asp-validation-for="Input.OldPassword" id="oldDanger"class="text-danger">@if (ViewData.ModelState.ContainsKey("OldPassword"))
                    {
                        @ViewData.ModelState["OldPassword"].Errors.FirstOrDefault().ErrorMessage.ToString()
                        ;
                    }</span>
            </div>
            <div class="mt-3 me-4 me-md-0">
                <label asp-for="Input.NewPassword" class="form-label text-primary"></label>
                <div class="d-flex">
                    <input asp-for="Input.NewPassword" id="password" class="form-control rounded border border-primary" autocomplete="new-password" aria-required="true" value=@if (TempData.ContainsKey("NewPassword"))
                           {
                           @TempData["NewPassword"]
                           ;
                           } />
                    <div class="position-relative">
                        <div id="password-eye" class="bi bi-eye fs-4 text-primary pointer-active ms-1 position-absolute" onclick="toggleNewPasswordChangeVisibility()"></div>
                    </div>
                </div>
                <span asp-validation-for="Input.NewPassword" id="passDanger" class="text-danger">@if (ViewData.ModelState.ContainsKey("NewPassword"))
                    {
                        @ViewData.ModelState["NewPassword"].Errors.FirstOrDefault().ErrorMessage.ToString()
                        ;
                    }
                </span>
            </div>
            <div class="mt-3 me-4 me-md-0">
                <label asp-for="Input.ConfirmPassword" class="form-label text-primary"></label>
                <div class="d-flex">
                    <input asp-for="Input.ConfirmPassword" id="confirmpassword" class="form-control rounded border border-primary" autocomplete="new-password" aria-required="true" value=@if (TempData.ContainsKey("ConfirmPassword"))
                           {
                           @TempData["ConfirmPassword"]
                           ;
                           } />
                    <div class="position-relative">
                        <div id="confirm-password-eye" class="bi bi-eye fs-4 text-primary pointer-active ms-1 position-absolute" onclick="toggleConfirmNewPasswordChangeVisibility()"></div>
                    </div>
                </div>
                <span asp-validation-for="Input.ConfirmPassword" id="passConfirmDanger" class="text-danger">@if (ViewData.ModelState.ContainsKey("ConfirmPassword"))
                    {
                        @ViewData.ModelState["ConfirmPassword"].Errors.FirstOrDefault().ErrorMessage.ToString()
                        ;
                    }</span>
            </div>
            <button type="submit" class="mt-3 w-100 btn btn-lg btn-primary" onsubmit="submit">@Localizer["update_password"]</button>
        </form>
    </div>
</div>
<script>
    function submit() 
    {
        event.preventDefault();
        let pattern = /^(?!_)(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!.*[<>\'\"])[^\x3C\x3E\x27\x22]{6,}$/;
        let password = document.getElementById('password').value;
        let confirmPassword = document.getElementById('confirmpassword').value;
        if (!pattern.test(password)) {
            ResetDanger();
            document.getElementById('passDanger').innerHTML = "@Localizer["invalid_password"]";
            console.log("Password Wrong");
            return
        }
        if (!(password === confirmPassword)) {
            ResetDanger();
            document.getElementById('passConfirmDanger').innerHTML = "@Localizer["password_mismatch"]";
            console.log("Password and ConfirmPassword Different");
            return
        }
        document.getElementById("change-password-form").submit();;
    }

    function ResetDanger()
    {
        document.getElementById('oldDanger').innerHTML = "";
        document.getElementById('Danger').innerHTML = "";
        document.getElementById('passDanger').innerHTML = "";
        document.getElementById('passConfirmDanger').innerHTML = "";
    }

    function toggleNewPasswordChangeVisibility() {
        togglePasswordVisibility("password", "password-eye");
    }
    function toggleConfirmNewPasswordChangeVisibility() {
        togglePasswordVisibility("confirmpassword", "confirm-password-eye");
    }

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
